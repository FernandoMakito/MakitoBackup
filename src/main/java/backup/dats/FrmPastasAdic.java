/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backup.dats;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fernando
 */
public class FrmPastasAdic extends javax.swing.JFrame {

    /**
     * Creates new form FrmExtensoes
     */
    public FrmPastasAdic() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDestinos = new javax.swing.JTable();
        btSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btSelecionar = new javax.swing.JButton();
        txtCaminho = new javax.swing.JTextField();
        txtExt = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        lblExt = new javax.swing.JLabel();
        ckTodos = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pastas Adicionais");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabelaDestinos.setAutoCreateRowSorter(true);
        tabelaDestinos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Caminho", "Extensões", "Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDestinos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabelaDestinos.setMaximumSize(new java.awt.Dimension(80, 0));
        tabelaDestinos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaDestinos);
        if (tabelaDestinos.getColumnModel().getColumnCount() > 0) {
            tabelaDestinos.getColumnModel().getColumn(1).setMaxWidth(100);
            tabelaDestinos.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        btSalvar.setBackground(new java.awt.Color(1, 109, 187));
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setText("Salvar Pastas");
        btSalvar.setActionCommand("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecionar pastas e extensões"));

        btSelecionar.setBackground(new java.awt.Color(1, 109, 187));
        btSelecionar.setForeground(new java.awt.Color(255, 255, 255));
        btSelecionar.setText("...");
        btSelecionar.setToolTipText("Adicionar um local onde o backup será feito");
        btSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarActionPerformed(evt);
            }
        });

        txtCaminho.setText("Caminho da pasta adicional");

        txtExt.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtExt.setText("jpg,png,etc");
        txtExt.setToolTipText("Extensões separadas por virgulas");
        txtExt.setEnabled(false);

        btAdicionar.setBackground(new java.awt.Color(1, 109, 187));
        btAdicionar.setForeground(new java.awt.Color(255, 255, 255));
        btAdicionar.setText("Adicionar");
        btAdicionar.setToolTipText("Adicionar um local onde o backup será feito");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        lblExt.setText("Extensões");
        lblExt.setEnabled(false);

        ckTodos.setSelected(true);
        ckTodos.setText("Backup da pasta inteira");
        ckTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtCaminho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSelecionar))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(ckTodos)
                        .addGap(28, 28, 28)
                        .addComponent(lblExt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelecionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ckTodos)
                        .addComponent(txtExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblExt, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdicionar))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalvar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            Configuracoes cfg = new Configuracoes();
            String destinos = cfg.getPropriedade("pastas_adicionais");
            if (!destinos.equals("")) {
                if (!destinos.contains("[") && !destinos.equals("")) {
                    destinos = "[" + new File(destinos).getParent() + "]&";
                }
                DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
                String[] destino = destinos.split("&");
                String[] quebra;
                String pasta,ext;
                for (int i = 0; i < destino.length; i++) {
                    quebra = destino[i].replace("[", "").replace("]", "").split("\\{");
                    pasta = quebra[0];
                    ext = quebra[1].replace("}", "");
                    model.addRow(new Object[]{pasta,ext, true});
                }
            }
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FrmPastasAdic.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmPastasAdic.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {

            DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
            int qtdFiles = model.getRowCount();
            Configuracoes cfg = new Configuracoes();
            String destinos = "";
            for (int i = 0; i < qtdFiles; i++) {
                boolean selec = (boolean) model.getValueAt(i, 2);
                if (selec) {
                    destinos = (String) "[" + model.getValueAt(i, 0) + "{"+ model.getValueAt(i, 1) +"}" +  "]&" + destinos;
                }
            }
            cfg.setPropriedade("pastas_adicionais", destinos);
            setVisible(false);

        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FrmExtensoes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmExtensoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarActionPerformed
        String caminho = selecionaPasta();
        txtCaminho.setText(caminho);
    }//GEN-LAST:event_btSelecionarActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        String ext = "*";
        if(!ckTodos.isSelected()){
            ext = txtExt.getText();
        }
        if (confereCaminho(txtCaminho.getText())) {
            DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
            model.addRow(new Object[]{txtCaminho.getText(),ext, true});
        }
        txtCaminho.setText("Caminho da pasta adicional");
        ckTodos.setSelected(true);
        txtExt.setText("jpg,png,etc");
        txtExt.setEnabled(false);
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void ckTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckTodosActionPerformed
        lblExt.setEnabled(!ckTodos.isSelected());
        txtExt.setEnabled(!ckTodos.isSelected());
    }//GEN-LAST:event_ckTodosActionPerformed

    private boolean confereCaminho(String caminho) {
        if (caminho.equals("") || !new File(caminho).isDirectory()) {
            JOptionPane.showMessageDialog(null, "<html>O caminho informado não é uma pasta válida.<html>", "Problemas ao adicionar pasta", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        if(!ckTodos.isSelected() && txtExt.getText().replace(".","").equals("")){
            JOptionPane.showMessageDialog(null, "<html>Informe pelo menos uma extensão<html>", "Problemas ao adicionar pasta", JOptionPane.INFORMATION_MESSAGE);
            return false; 
        }
        DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
        boolean tudoOk = true;
        String linha;
        for (int i = 0; i < model.getRowCount(); i++) {
            linha = (String) model.getValueAt(i, 0);
            if (linha.equals(caminho)) {
                tudoOk = false;
                JOptionPane.showMessageDialog(null, "<html>A pasta <b>" + caminho + "</b> já existe na listagem abaixo<html>", "Problemas ao adicionar pasta", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
        }
        return tudoOk;
    }

    private String selecionaPasta() {
        JFileChooser j = new JFileChooser(new File("."));
        j.setCurrentDirectory(j.getFileSystemView().getParentDirectory(new File("C:\\")));
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        j.setDialogTitle("Selecione uma pasta adicional");
        j.setApproveButtonText("Selecionar Pasta");
        j.setAcceptAllFileFilterUsed(false);
        Integer opt = j.showOpenDialog(this);
        if (opt == 0) {
            return j.getSelectedFile().getAbsolutePath();
        } else {
            return "";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPastasAdic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPastasAdic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPastasAdic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPastasAdic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPastasAdic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JCheckBox ckTodos;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblExt;
    private javax.swing.JTable tabelaDestinos;
    private javax.swing.JTextField txtCaminho;
    private javax.swing.JTextField txtExt;
    // End of variables declaration//GEN-END:variables
}
